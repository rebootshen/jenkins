http://tracking.portal.appdynamics.com/track/click/30145980/login.appdynamics.com?p=eyJzIjoiVUhjWFZNZURJVVhaNnlNOERzSFU2Z3ZXVHFzIiwidiI6MSwicCI6IntcInVcIjozMDE0NTk4MCxcInZcIjoxLFwidXJsXCI6XCJodHRwczpcXFwvXFxcL2xvZ2luLmFwcGR5bmFtaWNzLmNvbVxcXC9hY2NvdW50c1xcXC9hY3RpdmF0ZVxcXC9kZmQxMzM0OWxxd2dvNmpzcnA0dFwiLFwiaWRcIjpcIjdjODExMTJlZjYyNTRhYTc4NWYzYjFhNWZlMjkzYWQ3XCIsXCJ1cmxfaWRzXCI6W1wiNDJhMmZlNzdmZDczM2YyMzMxNDVlM2NiYWM5MjhhM2I4Njc3ZTAzYVwiXX0ifQ

http://tracking.portal.appdynamics.com/track/click/30145980/www.appdynamics.com?p=eyJzIjoiMFFKOG8wc25BRVZJTG1rRnNaNGM3cE4xX3p3IiwidiI6MSwicCI6IntcInVcIjozMDE0NTk4MCxcInZcIjoxLFwidXJsXCI6XCJodHRwOlxcXC9cXFwvd3d3LmFwcGR5bmFtaWNzLmNvbVxcXC9cIixcImlkXCI6XCI3YzgxMTEyZWY2MjU0YWE3ODVmM2IxYTVmZTI5M2FkN1wiLFwidXJsX2lkc1wiOltcIjUyOTk5ODE1NzgwNTU1ODVkYzViZWQyMTBkYzQxYjRkY2VmNDhhMDNcIl19In0




https://gitlab.nal.vn/tunn/my-demo-ci-project/tree/master/demo-java-ci/demo-bdd-stories
https://gitlab.nal.vn/tunn/my-demo-ci-project/commit/da84b1a3da4064cf1e237cbc2c939cdcf50b22fa?expand_all_diffs=1

http://www.thucydides.info/docs/serenity/#_serenity_system_properties_and_configuration
https://johnfergusonsmart.com/configuring-different-output-directories-serenity-bdd-maven/

http://maven.apache.org/surefire/maven-failsafe-plugin/
http://thucydides.info/docs/serenity-staging/
https://github.com/serenity-bdd/serenity-maven-plugin/issues/25
https://dzone.com/articles/configuring-different-output-directories-with-sere
==
https://github.com/robotframework/HowToWriteGoodTestCases/blob/master/HowToWriteGoodTestCases.rst
https://blog.codecentric.de/en/2010/07/how-to-structure-a-scalable-and-maintainable-acceptance-test-suite/

http://www.itguai.com/android/a4454071.html
public class AcceptanceTestSuite extends SerenityStories {
    @Managed
    WebDriver driver;

    public AcceptanceTestSuite() {
    System.setProperty("webdriver.chrome.driver", "D:/files/chromedriver/chromedriver.exe");
    System.setProperty("chrome.switches", "--lang=en");
    System.setProperty("restart.browser.each.scenario", "true");
    configuredEmbedder().useMetaFilters(Arrays.asList("-skip"));

    runSerenity().withDriver("chrome"); 
    }

===
	@Before
	public void init() throws IOException {
		Properties prop = new Properties();
		prop.load(VoidTransactionTest.class
				.getResourceAsStream("/unittest-application.properties"));
		host = prop.getProperty("target.host");
	}
	====
	
		        private void loadProperties() {
144	                try {
145	                        properties.load(AcceptanceTestSuite.class.getResourceAsStream(getPropertiesFilePath()));
146	                } catch (Exception ex) {
147	                        logger.error(ex.getMessage());
148	                }
149	        }

mvn clean install -Dwebdriver.driver=firefox -Dwebdriver.base.url=http://testsite.com -Dmetafilter="+suite suiteName -skip" -Dthucydides.take.screenshots=FOR_FAILURES -Dthucydides.activate.firebugs=true

	===================
	public PCIRestHttpRequest() {
		Properties properties = new Properties();
		try {
			properties.load(this.getClass().getResourceAsStream("/application.properties"));
			pciUrl = properties.getProperty("pci.host");

		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}


====
pom.xml

</dependencies>

	<profiles>
		<profile>
			<id>dev_local</id>
			<properties>
				<env>dev_local</env>
				<ip>localhost:8080</ip>
				<manager>manager</manager>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>dev_localdb</id>
			<properties>
				<env>dev_localdb</env>
				<ip>localdbserver:8080</ip>
				<manager>manager</manager>
			</properties>
		</profile>
		<profile>
			<id>dev_sit1</id>
			<properties>
				<env>dev_sit1</env>
				<ip>10.0.101.205:8080</ip>
				<manager>manager</manager>
			</properties>
		</profile>
		<profile>
			<id>dev_sit2</id>
			<properties>
				<env>dev_sit2</env>
				<ip>10.0.101.206:8080</ip>
				<manager>manager</manager>
			</properties>
		</profile>
		<profile>
			<id>dev_uat</id>
			<properties>
				<env>dev_uat</env>
				<ip>10.0.101.204:8080</ip>
				<manager>manager</manager>
			</properties>
		</profile>
		<profile>
			<id>smc_pro203</id>
			<properties>
				<env>smc_pro</env>
				<ip>www.kissco.com:8080</ip>
				<manager>manager203</manager>
			</properties>
		</profile>
		<profile>
			<id>smc_pro204</id>
			<properties>
				<env>smc_pro</env>
				<ip>www.kissco.com:8080</ip>
				<manager>manager204</manager>
			</properties>
		</profile>
		<profile>
			<id>smc_uat201</id>
			<properties>
				<env>smc_uat</env>
				<ip>www2.kissco.com</ip>
				<manager>manager201</manager>
			</properties>
		</profile>
		<profile>
			<id>smc_uat202</id>
			<properties>
				<env>smc_uat</env>
				<ip>www2.kissco.com</ip>
				<manager>manager202</manager>
			</properties>
		</profile>
		<profile>
			<id>smc_sino</id>
			<properties>
				<env>smc_sino</env>
			</properties>
		</profile>
		<profile>
			<id>dev_sitsz</id>
			<properties>
				<env>dev_sitsz</env>
			</properties>
		</profile>
	</profiles>

	<build>
		<finalName>smartonekiss##${project.version}-${env}-r${svn.revision}</finalName>
		<filters>
			<filter>src/main/filters/${env}.properties</filter>
		</filters>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>					
			<plugin>
    
    
